(()=>{"use strict";var t={n:e=>{var r=e&&e.__esModule?()=>e.default:()=>e;return t.d(r,{a:r}),r},d:(e,r)=>{for(var o in r)t.o(r,o)&&!t.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:r[o]})},o:(t,e)=>Object.prototype.hasOwnProperty.call(t,e)};const e=window.wp.domReady;var r=t.n(e);const o=window.wp.i18n,n=window.wp.apiFetch;var s=t.n(n);const i=new class{constructor(){this.currentWorkout=null,this.exercises=[],this.init()}init(){this.bindEvents(),this.loadWorkoutTemplates()}bindEvents(){document.addEventListener("click",t=>{t.target.matches(".start-workout")&&this.startWorkout()}),document.addEventListener("click",t=>{t.target.matches(".add-exercise")&&this.addExercise()}),document.addEventListener("click",t=>{t.target.matches(".complete-set")&&this.completeSet(t.target)}),document.addEventListener("click",t=>{t.target.matches(".complete-workout")&&this.completeWorkout()})}async loadWorkoutTemplates(){try{const t=await s()({path:"/wp/v2/workout-templates"});this.renderWorkoutTemplates(t)}catch(t){console.log("Workout templates endpoint not available yet:",t.message),this.renderWorkoutTemplates([])}}renderWorkoutTemplates(t){const e=document.querySelector(".workout-templates");if(!e)return;if(0===t.length)return void(e.innerHTML=`\n        <div class="no-templates">\n          <p>${(0,o.__)("No workout templates available yet.","liftingtracker-pro")}</p>\n          <button class="btn btn-primary start-workout">\n            ${(0,o.__)("Start Custom Workout","liftingtracker-pro")}\n          </button>\n        </div>\n      `);const r=t.map(t=>`\n            <div class="workout-template" data-template-id="${t.id}">\n                <h3>${t.title.rendered}</h3>\n                <p>${t.excerpt.rendered}</p>\n                <button class="btn btn-primary start-workout" data-template-id="${t.id}">\n                    ${(0,o.__)("Start Workout","liftingtracker-pro")}\n                </button>\n            </div>\n        `).join("");e.innerHTML=r}startWorkout(t=null){this.currentWorkout={id:Date.now(),templateId:t,startTime:new Date,exercises:[],isActive:!0},this.renderWorkoutInterface(),this.saveWorkoutToStorage()}addExercise(){const t=document.querySelector("#exercise-select").value;if(!t)return;const e={id:Date.now(),name:t,sets:[]};this.currentWorkout.exercises.push(e),this.renderWorkoutInterface(),this.saveWorkoutToStorage()}completeSet(t){const e=t.getAttribute("data-exercise-id"),r=t.parentElement.querySelector(".weight-input").value,o=t.parentElement.querySelector(".reps-input").value;if(!r||!o)return;const n=this.currentWorkout.exercises.find(t=>t.id==e);n&&(n.sets.push({weight:parseFloat(r),reps:parseInt(o),completedAt:new Date}),this.renderWorkoutInterface(),this.saveWorkoutToStorage())}async completeWorkout(){if(this.currentWorkout){this.currentWorkout.completedAt=new Date,this.currentWorkout.isActive=!1;try{await this.saveWorkoutToDatabase(),this.clearWorkoutStorage(),this.showWorkoutSummary()}catch(t){console.error("Error saving workout:",t)}}}renderWorkoutInterface(){const t=document.querySelector(".workout-interface");if(!t)return;const e=`\n            <div class="workout-header">\n                <h2>${(0,o.__)("Active Workout","liftingtracker-pro")}</h2>\n                <p>${(0,o.__)("Started:","liftingtracker-pro")} ${this.currentWorkout.startTime.toLocaleTimeString()}</p>\n            </div>\n            \n            <div class="exercise-selection">\n                <select id="exercise-select">\n                    <option value="">${(0,o.__)("Select Exercise","liftingtracker-pro")}</option>\n                    <option value="bench-press">${(0,o.__)("Bench Press","liftingtracker-pro")}</option>\n                    <option value="squat">${(0,o.__)("Squat","liftingtracker-pro")}</option>\n                    <option value="deadlift">${(0,o.__)("Deadlift","liftingtracker-pro")}</option>\n                </select>\n                <button class="btn btn-secondary add-exercise">\n                    ${(0,o.__)("Add Exercise","liftingtracker-pro")}\n                </button>\n            </div>\n\n            <div class="exercises-list">\n                ${this.currentWorkout.exercises.map(t=>this.renderExercise(t)).join("")}\n            </div>\n\n            <div class="workout-actions">\n                <button class="btn btn-primary complete-workout">\n                    ${(0,o.__)("Complete Workout","liftingtracker-pro")}\n                </button>\n            </div>\n        `;t.innerHTML=e}renderExercise(t){return`\n            <div class="exercise" data-exercise-id="${t.id}">\n                <h3>${t.name}</h3>\n                \n                <div class="sets-completed">\n                    ${t.sets.map((t,e)=>`\n                        <div class="set-completed">\n                            ${(0,o.__)("Set","liftingtracker-pro")} ${e+1}: ${t.weight}kg √ó ${t.reps}\n                        </div>\n                    `).join("")}\n                </div>\n\n                <div class="set-input">\n                    <input type="number" class="weight-input" placeholder="${(0,o.__)("Weight (kg)","liftingtracker-pro")}" step="0.5">\n                    <input type="number" class="reps-input" placeholder="${(0,o.__)("Reps","liftingtracker-pro")}" step="1">\n                    <button class="btn btn-success complete-set" data-exercise-id="${t.id}">\n                        ${(0,o.__)("Complete Set","liftingtracker-pro")}\n                    </button>\n                </div>\n            </div>\n        `}saveWorkoutToStorage(){localStorage.setItem("liftingtracker_current_workout",JSON.stringify(this.currentWorkout))}loadWorkoutFromStorage(){const t=localStorage.getItem("liftingtracker_current_workout");return!!t&&(this.currentWorkout=JSON.parse(t),!0)}clearWorkoutStorage(){localStorage.removeItem("liftingtracker_current_workout")}async saveWorkoutToDatabase(){const t={title:`Workout - ${this.currentWorkout.startTime.toLocaleDateString()}`,content:JSON.stringify(this.currentWorkout),status:"publish",type:"workout"};return await s()({path:"/wp/v2/workouts",method:"POST",data:t})}showWorkoutSummary(){const t=this.currentWorkout.exercises.reduce((t,e)=>t+e.sets.length,0),e=Math.round((this.currentWorkout.completedAt-this.currentWorkout.startTime)/1e3/60);alert(`${(0,o.__)("Workout completed!","liftingtracker-pro")}\n        ${(0,o.__)("Duration:","liftingtracker-pro")} ${e} ${(0,o.__)("minutes","liftingtracker-pro")}\n        ${(0,o.__)("Total sets:","liftingtracker-pro")} ${t}`)}};i.loadWorkoutFromStorage()&&i.renderWorkoutInterface();new class{constructor(){this.stats={},this.recentWorkouts=[],this.init()}init(){document.body.classList.contains("dashboard")&&(this.loadDashboardData(),this.bindEvents())}bindEvents(){document.addEventListener("click",t=>{t.target.matches(".refresh-stats")&&this.loadDashboardData()}),document.addEventListener("click",t=>{if(t.target.matches(".quick-workout")){const e=t.target.getAttribute("data-workout-type");this.startQuickWorkout(e)}})}async loadDashboardData(){try{const[t,e]=await Promise.all([this.loadStats(),this.loadRecentWorkouts()]);this.stats=t,this.recentWorkouts=e,this.renderDashboard()}catch(t){console.error("Error loading dashboard data:",t)}}async loadStats(){try{return await s()({path:"/liftingtracker/v1/stats"})}catch(t){return{totalWorkouts:0,totalSets:0,totalWeight:0,currentStreak:0}}}async loadRecentWorkouts(){try{return await s()({path:"/wp/v2/workouts?per_page=5&orderby=date&order=desc"})}catch(t){return console.error("Error loading recent workouts:",t),[]}}renderDashboard(){this.renderStatsCards(),this.renderRecentWorkouts(),this.renderQuickActions()}renderStatsCards(){const t=document.querySelector(".stats-cards");if(!t)return;const e=`\n            <div class="stat-card">\n                <div class="stat-icon">üèãÔ∏è</div>\n                <div class="stat-content">\n                    <h3>${this.stats.totalWorkouts||0}</h3>\n                    <p>${(0,o.__)("Total Workouts","liftingtracker-pro")}</p>\n                </div>\n            </div>\n            \n            <div class="stat-card">\n                <div class="stat-icon">üí™</div>\n                <div class="stat-content">\n                    <h3>${this.stats.totalSets||0}</h3>\n                    <p>${(0,o.__)("Total Sets","liftingtracker-pro")}</p>\n                </div>\n            </div>\n            \n            <div class="stat-card">\n                <div class="stat-icon">‚öñÔ∏è</div>\n                <div class="stat-content">\n                    <h3>${this.formatWeight(this.stats.totalWeight||0)}</h3>\n                    <p>${(0,o.__)("Total Weight","liftingtracker-pro")}</p>\n                </div>\n            </div>\n            \n            <div class="stat-card">\n                <div class="stat-icon">üî•</div>\n                <div class="stat-content">\n                    <h3>${this.stats.currentStreak||0}</h3>\n                    <p>${(0,o.__)("Day Streak","liftingtracker-pro")}</p>\n                </div>\n            </div>\n        `;t.innerHTML=e}renderRecentWorkouts(){const t=document.querySelector(".recent-workouts");if(!t)return;if(0===this.recentWorkouts.length)return void(t.innerHTML=`\n                <div class="no-workouts">\n                    <p>${(0,o.__)("No workouts yet. Start your first workout!","liftingtracker-pro")}</p>\n                </div>\n            `);const e=`\n            <h3>${(0,o.__)("Recent Workouts","liftingtracker-pro")}</h3>\n            <div class="workouts-list">\n                ${this.recentWorkouts.map(t=>this.renderWorkoutCard(t)).join("")}\n            </div>\n        `;t.innerHTML=e}renderWorkoutCard(t){const e=JSON.parse(t.content.rendered||"{}"),r=new Date(t.date).toLocaleDateString(),n=e.completedAt&&e.startTime?Math.round((new Date(e.completedAt)-new Date(e.startTime))/1e3/60):0;return`\n            <div class="workout-card">\n                <div class="workout-header">\n                    <h4>${t.title.rendered}</h4>\n                    <span class="workout-date">${r}</span>\n                </div>\n                <div class="workout-details">\n                    <span class="workout-duration">${n} ${(0,o.__)("min","liftingtracker-pro")}</span>\n                    <span class="workout-exercises">${e.exercises?.length||0} ${(0,o.__)("exercises","liftingtracker-pro")}</span>\n                </div>\n                <button class="btn btn-outline view-workout" data-workout-id="${t.id}">\n                    ${(0,o.__)("View Details","liftingtracker-pro")}\n                </button>\n            </div>\n        `}renderQuickActions(){const t=document.querySelector(".quick-actions");if(!t)return;const e=`\n            <h3>${(0,o.__)("Quick Actions","liftingtracker-pro")}</h3>\n            <div class="quick-actions-grid">\n                <button class="quick-action-btn quick-workout" data-workout-type="push">\n                    <div class="action-icon">üèãÔ∏è</div>\n                    <span>${(0,o.__)("Push Workout","liftingtracker-pro")}</span>\n                </button>\n                \n                <button class="quick-action-btn quick-workout" data-workout-type="pull">\n                    <div class="action-icon">üö£</div>\n                    <span>${(0,o.__)("Pull Workout","liftingtracker-pro")}</span>\n                </button>\n                \n                <button class="quick-action-btn quick-workout" data-workout-type="legs">\n                    <div class="action-icon">ü¶µ</div>\n                    <span>${(0,o.__)("Leg Workout","liftingtracker-pro")}</span>\n                </button>\n                \n                <button class="quick-action-btn" onclick="window.location.href='${window.location.origin}/workout-tracker'">\n                    <div class="action-icon">‚ûï</div>\n                    <span>${(0,o.__)("Custom Workout","liftingtracker-pro")}</span>\n                </button>\n            </div>\n        `;t.innerHTML=e}startQuickWorkout(t){window.location.href=`${window.location.origin}/workout-tracker?template=${t}`}formatWeight(t){return t>=1e3?`${(t/1e3).toFixed(1)}k kg`:`${t} kg`}};new class{constructor(){this.mobileMenuOpen=!1,this.init()}init(){this.bindEvents(),this.initializeDropdowns(),this.setActiveMenuItem(),this.handleResize()}bindEvents(){const t=document.getElementById("mobile-menu-button");t&&t.addEventListener("click",()=>{this.toggleMobileMenu()}),window.addEventListener("resize",()=>{window.innerWidth>=1024&&this.mobileMenuOpen&&this.closeMobileMenu()}),document.addEventListener("click",t=>{t.target.matches(".dropdown-toggle")&&this.toggleDropdown(t.target)}),document.addEventListener("click",t=>{t.target.closest(".dropdown")||t.target.closest(".user-menu")||this.closeAllDropdowns()}),document.addEventListener("input",t=>{t.target.matches(".nav-search-input")&&this.handleSearch(t.target.value)}),document.addEventListener("keydown",t=>{"Escape"===t.key&&(this.closeAllDropdowns(),this.closeMobileMenu())})}toggleMobileMenu(){const t=document.getElementById("mobile-menu"),e=document.getElementById("mobile-menu-button"),r=e.querySelector(".mobile-menu-icon");t&&e&&r&&(this.mobileMenuOpen=!this.mobileMenuOpen,this.mobileMenuOpen?(t.classList.remove("hidden"),r.textContent="close",requestAnimationFrame(()=>{t.classList.add("mobile-menu-open")})):(t.classList.remove("mobile-menu-open"),r.textContent="menu",setTimeout(()=>{t.classList.add("hidden")},200)))}closeMobileMenu(){const t=document.getElementById("mobile-menu"),e=document.getElementById("mobile-menu-button"),r=e?.querySelector(".mobile-menu-icon");t&&this.mobileMenuOpen&&(this.mobileMenuOpen=!1,t.classList.remove("mobile-menu-open"),r&&(r.textContent="menu"),setTimeout(()=>{t.classList.add("hidden")},200))}handleResize(){window.addEventListener("resize",()=>{window.innerWidth>=1024&&this.mobileMenuOpen&&this.closeMobileMenu()})}initializeDropdowns(){document.querySelectorAll(".dropdown").forEach(t=>{const e=t.querySelector(".dropdown-toggle"),r=t.querySelector(".dropdown-menu");e&&r&&(e.setAttribute("aria-expanded","false"),e.setAttribute("aria-haspopup","true"),r.setAttribute("aria-hidden","true"))})}toggleDropdown(t){const e=t.closest(".dropdown"),r=e.querySelector(".dropdown-menu"),o=e.classList.contains("active");if(this.closeAllDropdowns(),!o){e.classList.add("active"),t.setAttribute("aria-expanded","true"),r.setAttribute("aria-hidden","false");const o=r.querySelector("a, button");o&&o.focus()}}closeAllDropdowns(){document.querySelectorAll(".dropdown.active").forEach(t=>{const e=t.querySelector(".dropdown-toggle"),r=t.querySelector(".dropdown-menu");t.classList.remove("active"),e.setAttribute("aria-expanded","false"),r.setAttribute("aria-hidden","true")})}setActiveMenuItem(){const t=window.location.pathname;document.querySelectorAll(".nav-menu a").forEach(e=>{const r=e.getAttribute("href");r===t||"/"!==r&&t.startsWith(r)?(e.classList.add("active"),e.closest("li")?.classList.add("active")):(e.classList.remove("active"),e.closest("li")?.classList.remove("active"))})}handleSearch(t){t.length<2?this.clearSearchResults():(clearTimeout(this.searchTimeout),this.searchTimeout=setTimeout(()=>{this.performSearch(t)},300))}async performSearch(t){try{const e=await fetch(`${window.location.origin}/wp-json/wp/v2/search?search=${encodeURIComponent(t)}&per_page=5`),r=await e.json();this.displaySearchResults(r)}catch(t){console.error("Search error:",t)}}displaySearchResults(t){const e=document.querySelector(".search-results");if(!e)return;if(0===t.length)return void(e.innerHTML=`\n                <div class="no-results">\n                    <p>${(0,o.__)("No results found","liftingtracker-pro")}</p>\n                </div>\n            `);const r=t.map(t=>`\n            <div class="search-result">\n                <a href="${t.url}" class="search-result-link">\n                    <h4>${t.title}</h4>\n                    <p>${t.excerpt||""}</p>\n                </a>\n            </div>\n        `).join("");e.innerHTML=r,e.classList.add("active")}clearSearchResults(){const t=document.querySelector(".search-results");t&&(t.innerHTML="",t.classList.remove("active"))}};new class{constructor(){this.init()}init(){this.bindEvents(),this.initializeValidation()}bindEvents(){document.addEventListener("submit",t=>{t.target.matches(".ajax-form")&&(t.preventDefault(),this.handleFormSubmit(t.target))}),document.addEventListener("input",t=>{t.target.matches(".validate-field")&&this.validateField(t.target)}),document.addEventListener("change",t=>{t.target.matches(".file-upload")&&this.handleFileUpload(t.target)}),document.addEventListener("click",t=>{t.target.matches(".password-toggle")&&this.togglePasswordVisibility(t.target)})}initializeValidation(){document.querySelectorAll(".ajax-form").forEach(t=>{t.querySelectorAll(".validate-field").forEach(t=>{this.setupFieldValidation(t)})})}setupFieldValidation(t){const e=t.closest(".form-field");if(e&&!e.querySelector(".field-error")){const t=document.createElement("div");t.className="field-error",e.appendChild(t)}}async handleFormSubmit(t){const e=t.querySelector('[type="submit"]'),r=e.textContent;e.disabled=!0,e.textContent=(0,o.__)("Processing...","liftingtracker-pro");try{if(!this.validateForm(t))throw new Error((0,o.__)("Please fix the errors above","liftingtracker-pro"));const e=new FormData(t),r=t.getAttribute("data-action")||"submit_form";e.append("action",r),e.append("nonce",liftingtracker_ajax.nonce);const n=await fetch(liftingtracker_ajax.ajax_url,{method:"POST",body:e}),s=await n.json();if(!s.success)throw new Error(s.data.message||(0,o.__)("Something went wrong","liftingtracker-pro"));this.showFormSuccess(t,s.data.message),this.resetForm(t)}catch(e){this.showFormError(t,e.message)}finally{e.disabled=!1,e.textContent=r}}validateForm(t){const e=t.querySelectorAll(".validate-field");let r=!0;return e.forEach(t=>{this.validateField(t)||(r=!1)}),r}validateField(t){const e=t.value.trim(),r=t.getAttribute("data-validate"),n=t.hasAttribute("required"),s=t.closest(".form-field"),i=s.querySelector(".field-error");let a=!0,c="";if(n&&!e&&(a=!1,c=(0,o.__)("This field is required","liftingtracker-pro")),e&&r)switch(r){case"email":/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(e)||(a=!1,c=(0,o.__)("Please enter a valid email address","liftingtracker-pro"));break;case"password":e.length<8&&(a=!1,c=(0,o.__)("Password must be at least 8 characters","liftingtracker-pro"));break;case"phone":/^\+?[\d\s\-\(\)]+$/.test(e)||(a=!1,c=(0,o.__)("Please enter a valid phone number","liftingtracker-pro"));break;case"number":isNaN(e)&&(a=!1,c=(0,o.__)("Please enter a valid number","liftingtracker-pro"));break;case"url":try{new URL(e)}catch{a=!1,c=(0,o.__)("Please enter a valid URL","liftingtracker-pro")}}if(t.getAttribute("data-confirm")){const r=document.querySelector(`[name="${t.getAttribute("data-confirm")}"]`);r&&e!==r.value&&(a=!1,c=(0,o.__)("Passwords do not match","liftingtracker-pro"))}return this.updateFieldUI(t,s,i,a,c),a}updateFieldUI(t,e,r,o,n){o?(t.classList.remove("error"),e.classList.remove("has-error"),r.textContent="",r.style.display="none"):(t.classList.add("error"),e.classList.add("has-error"),r.textContent=n,r.style.display="block")}handleFileUpload(t){const e=t.files[0];if(e)return e.size>5242880?(this.showFieldError(t,(0,o.__)("File size must be less than 5MB","liftingtracker-pro")),void(t.value="")):["image/jpeg","image/png","image/gif","image/webp"].includes(e.type)?void(e.type.startsWith("image/")&&this.showImagePreview(t,e)):(this.showFieldError(t,(0,o.__)("Only image files are allowed","liftingtracker-pro")),void(t.value=""))}showImagePreview(t,e){const r=t.parentElement.querySelector(".image-preview");if(!r)return;const o=new FileReader;o.onload=t=>{r.innerHTML=`<img src="${t.target.result}" alt="Preview" style="max-width: 200px; max-height: 200px;">`},o.readAsDataURL(e)}togglePasswordVisibility(t){const e=t.parentElement.querySelector('input[type="password"], input[type="text"]');e&&("password"===e.type?(e.type="text",t.textContent=(0,o.__)("Hide","liftingtracker-pro")):(e.type="password",t.textContent=(0,o.__)("Show","liftingtracker-pro")))}showFormSuccess(t,e){this.removeFormMessages(t);const r=document.createElement("div");r.className="form-success",r.textContent=e,t.insertBefore(r,t.firstChild),setTimeout(()=>{r.remove()},5e3)}showFormError(t,e){this.removeFormMessages(t);const r=document.createElement("div");r.className="form-error",r.textContent=e,t.insertBefore(r,t.firstChild)}showFieldError(t,e){const r=t.closest(".form-field"),o=r.querySelector(".field-error");t.classList.add("error"),r.classList.add("has-error"),o.textContent=e,o.style.display="block"}removeFormMessages(t){t.querySelectorAll(".form-success, .form-error").forEach(t=>t.remove())}resetForm(t){t.reset(),t.querySelectorAll(".validate-field").forEach(t=>{t.classList.remove("error");const e=t.closest(".form-field");e.classList.remove("has-error");const r=e.querySelector(".field-error");r.textContent="",r.style.display="none"}),t.querySelectorAll(".image-preview").forEach(t=>{t.innerHTML=""})}};const a=()=>{console.log((0,o.__)("üèãÔ∏è LiftingTracker Pro theme initialized","liftingtracker-pro")),function(){const t=document.querySelector(".mobile-menu-toggle"),e=document.querySelector(".mobile-menu");t&&e&&t.addEventListener("click",()=>{e.classList.toggle("active"),t.classList.toggle("active")})}(),document.querySelectorAll(".ajax-form").forEach(t=>{t.addEventListener("submit",c)}),document.body.classList.contains("dashboard")&&console.log("Dashboard initialized"),document.body.classList.contains("workout-tracker")&&console.log("Workout tracker initialized")};function c(t){t.preventDefault();const e=t.target,r=new FormData(e);r.append("nonce",liftingtracker_ajax.nonce),fetch(liftingtracker_ajax.ajax_url,{method:"POST",body:r}).then(t=>t.json()).then(t=>{t.success?l(t.message,"success"):l(t.message,"error")}).catch(t=>{console.error("Error:",t),l((0,o.__)("Something went wrong","liftingtracker-pro"),"error")})}function l(t,e="info"){const r=document.createElement("div");r.className=`notification notification-${e}`,r.textContent=t,document.body.appendChild(r),setTimeout(()=>{r.remove()},5e3)}"function"==typeof r()?r()(a):"loading"===document.readyState?document.addEventListener("DOMContentLoaded",a):a()})();